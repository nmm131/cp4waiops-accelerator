
# *************************************************************************************************************************************************
# --------------------------------------------------------------------------------------------------------------------------------------
# Patches
# --------------------------------------------------------------------------------------------------------------------------------------
# *************************************************************************************************************************************************


# --------------------------------------------------------------------------------------------------------------------------------------
# Patch Ingress
# --------------------------------------------------------------------------------------------------------------------------------------
- name: CONFIG -             ðŸ©¹ Patch Ingress
  shell: oc patch namespace default --type=json -p '[{"op":"add","path":"/metadata/labels","value":{"network.openshift.io/policy-group":"ingress"}}]'
  register: ingress_patched


# --------------------------------------------------------------------------------------------------------------------------------------
# Create Topology Routes
# --------------------------------------------------------------------------------------------------------------------------------------
- name: DEMO -               ðŸ”Ž Check Topology Routes
  k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    name: topology-merge
    namespace: "{{ WAIOPS_NAMESPACE }}"
  register: K8S_EXISTS

- name: CONFIG -             ðŸš€ Create Topology Routes
  block:
  - name: CONFIG -             ðŸš€ Create Topology Route - topology-merge
    shell: oc create route passthrough topology-merge -n {{ WAIOPS_NAMESPACE }} --insecure-policy="Redirect" --service=aiops-topology-merge --port=https-merge-api
    ignore_errors: yes
    when: CREATE_TOPO_ROUTE == true

  - name: CONFIG -             ðŸš€ Create Topology Route - topology-rest
    shell: oc create route passthrough topology-rest -n {{ WAIOPS_NAMESPACE }} --insecure-policy="Redirect" --service=aiops-topology-rest-observer --port=https-rest-observer-admin
    ignore_errors: yes
    when: CREATE_TOPO_ROUTE == true

  - name: CONFIG -             ðŸš€ Create Topology Route - topology-manage
    shell: oc create route passthrough topology-manage -n {{ WAIOPS_NAMESPACE }} --service=evtmanager-topology-topology --port=https-topology-api
    ignore_errors: yes
    when: CREATE_TOPO_ROUTE == true
  when: K8S_EXISTS.resources|length == 0


- name: DEMO -               ðŸ”Ž Check Flink Route
  k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    name: job-manager
    namespace: "{{ WAIOPS_NAMESPACE }}"
  register: K8S_EXISTS

- name: CONFIG -             ðŸš€ Create Flink Route
  block:
  - name: CONFIG -             ðŸš€ Create Flink Job Manager Route
    shell: oc create route edge job-manager -n {{ WAIOPS_NAMESPACE }} --service=cp4waiops-eventprocessor-eve-29ee-ep-jobmanager --port=ui
    ignore_errors: yes
    when: CREATE_FLINK_ROUTE == true
  when: K8S_EXISTS.resources|length == 0
        


  
# --------------------------------------------------------------------------------------------------------------------------------------
# Wait for Cassandra Pod
# --------------------------------------------------------------------------------------------------------------------------------------
- name: CONFIG -             ðŸ•¦ Wait for Cassandra Pod to become available - this can take up to 45 minutes (hack for 3.2)
  shell: oc get po -n {{ WAIOPS_NAMESPACE }} | grep aiops-topology-cassandra-auth-secret-generator| grep -c ""
  register: kubectl_get_pods
  until: kubectl_get_pods.stdout == "1"
  retries: 500
  delay: 15


# --------------------------------------------------------------------------------------------------------------------------------------
# Patch Service Account
# --------------------------------------------------------------------------------------------------------------------------------------
- name: CONFIG -             ðŸ©¹ Patch aiops-topology-service-account (hack for 3.2)
  shell: |
    oc patch -n {{ WAIOPS_NAMESPACE }} serviceaccount aiops-topology-service-account -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
    oc delete pod $(oc get po -n {{ WAIOPS_NAMESPACE }}|grep ImagePull|awk '{print$1}') -n {{ WAIOPS_NAMESPACE }}
  ignore_errors: yes


  

# --------------------------------------------------------------------------------------------------------------------------------------
# Wait for IR Analytics Pods
# --------------------------------------------------------------------------------------------------------------------------------------
- name: CONFIG -             ðŸ•¦ Wait for CIR Analytics Pods to become available - this can take up to 45 minutes (hack for 3.2)
  shell: oc get po -n {{ WAIOPS_NAMESPACE }} | grep aiops-ir-analytics-probablecause| grep -c ""
  register: kubectl_get_pods
  until: kubectl_get_pods.stdout == "1"
  retries: 500
  delay: 15


# --------------------------------------------------------------------------------------------------------------------------------------
# Patch IR Analytics Pods
# --------------------------------------------------------------------------------------------------------------------------------------
- name: CONFIG -             ðŸ©¹ Patch IR Analytics Pods (hack for 3.2)
  shell: |
    oc patch -n {{ WAIOPS_NAMESPACE }} serviceaccount aiops-topology-service-account -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
    oc patch -n {{ WAIOPS_NAMESPACE }} serviceaccount aiops-ir-analytics-spark-worker -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
    oc patch -n {{ WAIOPS_NAMESPACE }} serviceaccount aiops-ir-analytics-spark-pipeline-composer -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
    oc patch -n {{ WAIOPS_NAMESPACE }} serviceaccount aiops-ir-analytics-spark-master -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
    oc patch -n {{ WAIOPS_NAMESPACE }} serviceaccount aiops-ir-analytics-probablecause -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
    oc patch -n {{ WAIOPS_NAMESPACE }} serviceaccount aiops-ir-analytics-classifier -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
    oc patch -n {{ WAIOPS_NAMESPACE }} serviceaccount aiops-ir-lifecycle-eventprocessor-ep -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
    oc delete pod $(oc get po -n {{ WAIOPS_NAMESPACE }}|grep ImagePull|awk '{print$1}') -n {{ WAIOPS_NAMESPACE }}
  ignore_errors: yes



# --------------------------------------------------------------------------------------------------------------------------------------
# Wait for Topology Pods
# --------------------------------------------------------------------------------------------------------------------------------------
- name: CONFIG -             ðŸ•¦ Wait for Topology Pods to become available - this can take up to 45 minutes (hack for 3.2)
  shell: oc get po -n {{ WAIOPS_NAMESPACE }} | grep aiops-topology-merge| grep -c ""
  register: kubectl_get_pods
  until: kubectl_get_pods.stdout == "1"
  retries: 500
  delay: 15


# --------------------------------------------------------------------------------------------------------------------------------------
# Patch Topology Pods
# --------------------------------------------------------------------------------------------------------------------------------------
- name: CONFIG -             ðŸ©¹ Patch aiops-topology-merge (hack for 3.2)
  shell: oc patch deployment aiops-topology-merge -n {{ WAIOPS_NAMESPACE }} --patch-file ./templates/waiops/patches/aiops-topology-merge-patch.yaml
  ignore_errors: yes


- name: CONFIG -             ðŸ©¹ Patch aiops-topology-search (hack for 3.2)
  shell: oc patch deployment aiops-topology-search -n {{ WAIOPS_NAMESPACE }} --patch-file ./templates/waiops/patches/aiops-topology-search-patch.yaml
  ignore_errors: yes


- name: CONFIG -             ðŸ©¹ Patch aiops-topology-status (hack for 3.2)
  shell: oc patch deployment aiops-topology-status -n {{ WAIOPS_NAMESPACE }} --patch-file ./templates/waiops/patches/aiops-topology-status-patch.yaml
  ignore_errors: yes


- name: CONFIG -             ðŸ©¹ Patch aiops-topology-layout (hack for 3.2)
  shell: oc patch deployment aiops-topology-layout -n {{ WAIOPS_NAMESPACE }} --patch-file ./templates/waiops/patches/aiops-topology-layout-patch.yaml
  ignore_errors: yes



# --------------------------------------------------------------------------------------------------------------------------------------
# Patch IR Analytics Pods
# --------------------------------------------------------------------------------------------------------------------------------------
- name: CONFIG -             ðŸ©¹ Patch IR Analytics Pods (hack for 3.2)
  shell: |
    oc patch -n {{ WAIOPS_NAMESPACE }} serviceaccount aiops-topology-service-account -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
    oc patch -n {{ WAIOPS_NAMESPACE }} serviceaccount aiops-ir-analytics-spark-worker -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
    oc patch -n {{ WAIOPS_NAMESPACE }} serviceaccount aiops-ir-analytics-spark-pipeline-composer -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
    oc patch -n {{ WAIOPS_NAMESPACE }} serviceaccount aiops-ir-analytics-spark-master -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
    oc patch -n {{ WAIOPS_NAMESPACE }} serviceaccount aiops-ir-analytics-probablecause -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
    oc patch -n {{ WAIOPS_NAMESPACE }} serviceaccount aiops-ir-analytics-classifier -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
    oc patch -n {{ WAIOPS_NAMESPACE }} serviceaccount aiops-ir-lifecycle-eventprocessor-ep -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
    oc delete pod $(oc get po -n {{ WAIOPS_NAMESPACE }}|grep ImagePull|awk '{print$1}') -n {{ WAIOPS_NAMESPACE }}
  ignore_errors: yes

